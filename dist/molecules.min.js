!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.Molecules=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";function d(a){return a&&a.__esModule?a:{"default":a}}function e(a){for(var b=arguments.length<=1||void 0===arguments[1]?[]:arguments[1],c=0;c<o.length;c++)for(var d=o[c],e=[];e=d.expression.exec(a);)b.push({index:e.index,type:d.type,term:e[0],tag:d.tag});b.sort(function(a,b){return a.index<b.index?-1:a.index>b.index?1:0});for(var c=0;c<b.length;c++)if("ring"===b[c].tag){var f=b[c].term.match(/[0-9]+/g);if(null===f)continue;if(f=f[0],f.length>1){for(var g=0,h=0;h<b.length;h++)if(c!==h&&"ring"===b[h].tag){var i=b[h].term.match(/[0-9]+/g);if(null!==i&&(i=i[0],f===i)){g=1;break}}if(1===g)continue;for(var j=b[c].term.match(/[a-zA-Z]/g)[0],h=0;h<f.length;h++)b.splice(c+1,0,{index:b[c].index+h,type:b[c].type,term:j+f.substr(h,h+1),tag:b[c].tag});b.splice(c,1)}}return{tokens:b}}function f(a){function b(a){if("object"!=typeof a)return console.log('Error: Tokens must be of type "object"'),!1;void 0!==a.tokens&&(a=a.tokens);for(var b=["index","type","term","tag"],c=0;c<a.length;c++){var d=g(b,Object.keys(a[c]));if(d.reduce(function(a,b){return a+b})<4)return console.log('Error: Invalid token at index "'+c+'"'),!1}return a}function c(a){for(var b=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],c=arguments.length<=2||void 0===arguments[2]?{}:arguments[2],d=arguments.length<=3||void 0===arguments[3]?{}:arguments[3],e=arguments.length<=4||void 0===arguments[4]?{}:arguments[4],f=0;f<a.length;f++){var g=a[f],j=g.type,k=g.term,l=g.tag,m=g.index,n=m.toString();switch(j){case"atom":b[n]=h(n,l,k);break;case"bond":c[n]=i(n,l,k);break;case"property":d[n]={id:n,name:l,value:k}}}e.all=[];for(var f=0;f<a.length;f++)e.all[f]=a[f].index.toString();return b.length<1?(console.log("Error: Could not find atoms"),!1):(e.atoms=Object.keys(b),e.bonds=Object.keys(c),e.properties=Object.keys(d),[b,c,d,e])}function d(a,b){for(var c=0;c<b.atoms.length;c++){var d=b.atoms[c];if(void 0!==n["default"][a[d].name]){var e=n["default"][a[d].name];"D"===a[d].value&&(e=n["default"][a[d].value]),a[d].group=e.group,a[d].protons=e.protons,a[d].neutrons=e.neutrons,a[d].electrons=e.electrons,a[d].bonds={id:[],atoms:[],electrons:0},a[d].properties={chiral:0,charge:0,aromatic:0},a[d].value===a[d].value.toLowerCase()&&(a[d].properties.aromatic=1)}}return a}function e(a,b,c){for(var d=0;d<c.properties.length;d++){var e=c.properties[d],f=b[e],g=f.name,h=f.value;switch(g){case"chiral":if(void 0!==a[e]){a[e].properties.chiral=h.slice(h.indexOf("@"));break}break;case"isotope":var i=h.match(/[0-9]+/g),j=1+i.toString().length+parseInt(e);if(i>=0&&250>i&&void 0!==a[j]){var k=i-a[j].protons;if(k>=0){a[j].neutrons=k;break}}break;case"charge":var l=-1!==h.indexOf("+")?1:-1,m=h.match(/(?:[^H])[0-9]+/g);if(null!==m&&void 0!==a[e]){m=m[0].substr(1),a[e].properties.charge=m*l;break}if(m=h.match(/([+]+|[-]+)/g),null!==m&&void 0!==a[e]){a[e].properties.charge=m[0].length*l;break}}}return a}function f(a,b,c){if(0===c.bonds.length||void 0===c.bonds)return[a,b,c];for(var d=0;d<c.bonds.length;d++){var e=c.bonds[d],f=a[k(e,c.all,a)],g=a[j(e,c.all,a)],h=c.all.indexOf(e),i=0,l=0;if(void 0!==f&&null!==f){if(i=c.atoms.indexOf(f.id),("double"===b[e].name||"triple"===b[e].name)&&"H"===f.name)for(;("H"===f.name||void 0===a[c.atoms[i]])&&i>-1;)f=a[c.atoms[i]],i-=1;i=c.all.indexOf(f.id)}if(!(0>i)){void 0!==g&&null!==g&&(l=c.all.indexOf(g.id));var m=0;if(l>h&&h>i&&void 0!==b[c.all[h-1]]){var n=b[c.all[h-1]].value,o=b[e].value;switch(n){case")":case"(":switch(o){case"-":case"=":case"#":case".":m=1}}}switch(b[e].name){case"single":if(1===m||void 0===f||void 0===g)continue;b[e].order=1,b[e].atoms=[f.id,g.id];break;case"double":if(1===m||void 0===f||void 0===g)continue;if("H"===g.name)continue;b[e].order=2,b[e].atoms=[f.id,g.id];break;case"triple":if(1===m||void 0===f||void 0===g)continue;if("H"===g.name)continue;b[e].order=3,b[e].atoms=[f.id,g.id];break;case"dot":if(1===m||void 0===f||void 0===g)continue;b[e].order=0;break;case"branch":var p=c.all.slice(0,h).reverse(),q=c.all.slice(h+1,c.all.length);switch(b[e].value){case"(":for(var r=0,s=0;r<p.length;r++){if(f=a[p[r]],void 0!==f&&"H"!==f.name&&0===s){var t=1;1===f.properties.aromatic&&1===g.properties.aromatic&&(t=1.5),b[e].order=t,b[e].atoms=[f.id,g.id];break}if(void 0!==b[p[r]])switch(b[p[r]].value){case")":s++;break;case"(":s--}}for(var r=0,t=b[e].order,s=0;r<q.length;r++){if(void 0!==b[q[r]]&&0===s)switch(b[q[r]].value){case"-":t=1;break;case"=":t=2;break;case"#":t=3;break;case".":t=0}if(0===s){b[e].order=t;break}if(void 0!==b[q[r]])switch(b[q[r]].value){case")":s--;break;case"(":s++}}break;case")":for(var r=0,s=1;r<p.length;r++){if(f=a[p[r]],void 0!==f&&"H"!==f.name&&0===s){var t=1;1===f.properties.aromatic&&(t=1.5),b[e].order=t,b[e].atoms[0]=f.id;break}if(void 0!==b[p[r]])switch(b[p[r]].value){case")":s++;break;case"(":s--}}for(var r=0,t=b[e].order,s=0;r<q.length;r++){if(g=a[q[r]],void 0!==b[q[r]]&&0===s)switch(b[q[r]].value){case"-":t=1;break;case"=":t=2;break;case"#":t=3;break;case".":t=0}if(void 0!==g&&0===s){1===g.properties.aromatic&&(t=1.5),b[e].order=t,b[e].atoms[1]=g.id;break}if(void 0!==b[q[r]])switch(b[q[r]].value){case")":s--;break;case"(":s++}}}break;case"ring":for(var u=b[e].value.match(/[0-9]+/g),v=c.bonds.slice(0,c.bonds.indexOf(e)),w=c.bonds.slice(c.bonds.indexOf(e),c.bonds.length),r=1;r<w.length;r++)if("ring"===b[w[r]].name){var x=b[w[r]].value.match(/[0-9]+/g),y=w[r],z=e;if(null!==u&&null!==x&&u[0]===x[0]){for(;void 0===a[z]&&z>=-1;)z-=1;for(;void 0===a[y]&&y>=-1;)y-=1;if(-1===z||-1===y)break;var t=1;1===a[z].properties.aromatic&&1===a[y].properties.aromatic&&(t=1.5),b[e].order=t,b[e].atoms=[z.toString(),y.toString()];break}if(r===w.length-1)for(var A=0;A<v.length;A++)if("ring"===b[w[r]].name){var B=b[v[A]].value.match(/[0-9]+/g),C=e,D=v[A];if(null!==u&&null!==B&&u[0]===B[0]){for(;void 0===a[D]&&D>=-1;)D-=1;for(;void 0===a[C]&&C>=-1;)C-=1;if(-1===D||-1===C)break;var t=1;1===a[D].properties.aromatic&&1===a[C].properties.aromatic&&(t=1.5),b[e].order=t,b[e].atoms=[D.toString(),C.toString()];break}}}}}}for(var d=0;d<c.bonds.length;d++)if(void 0!==c.bonds[d])if(2===b[c.bonds[d]].atoms.length){if(d!==c.bonds.length-1)for(var w=c.bonds.slice(d,c.bonds.length),r=0;r<w.length;r++)if(0!==r){var e=w[r],E=b[c.bonds[d]],F=b[e];if(void 0!==E&&void 0!==F&&(E.atoms[0]===F.atoms[0]&&E.atoms[1]===F.atoms[1]||E.atoms[0]===F.atoms[1]&&E.atoms[1]===F.atoms[0])){"ring"===E.name&&"ring"===F.name?(delete b[e],c.bonds.splice(c.bonds.indexOf(e),1)):"branch"!==E.name||"single"!==F.name&&"double"!==F.name&&"triple"!==F.name?"single"!==E.name&&"double"!==E.name&&"triple"!==E.name||"branch"!==F.name?(delete b[c.bonds[d]],c.bonds.splice(d,1)):(delete b[e],c.bonds.splice(c.bonds.indexOf(e),1)):(delete b[c.bonds[d]],c.bonds.splice(d,1)),d--;break}}}else delete b[c.bonds[d]],c.bonds.splice(d,1),d--;else c.bonds.splice(d,1),d--;for(var d=0;d<c.bonds.length;d++){var e=c.bonds[d],u=b[e].atoms[0],x=b[e].atoms[1];void 0!==u&&void 0!==x&&(a[u].bonds.id.push(e),a[x].bonds.id.push(e),a[u].bonds.atoms.push(x),a[x].bonds.atoms.push(u),a[u].bonds.electrons+=b[e].order,a[x].bonds.electrons+=b[e].order)}return[a,b,c]}function m(a,b,c){for(var d=function(a){arguments.length<=1||void 0===arguments[1]?18:arguments[1];return 2>=a?2:a>2&&12>=a?12:a>12&&18>=a?18:void 0},e=function(a,b){return b>0?a-=b:void 0},f=function(a,b,c){return a>12&&b>10&&0>=c?c+=4:c},g=function(b,c,d,e){a[b].bonds.id.push(d),a[c].bonds.id.push(d),a[b].bonds.atoms.push(c),a[c].bonds.atoms.push(b),a[b].bonds.electrons+=e,a[c].bonds.electrons+=e},j=0;j<c.atoms.length-1;j++){for(var k=a[c.atoms[j]],l=a[c.atoms[j+1]],m=j;("H"===k.name||void 0===a[c.atoms[m]])&&m>-1;)k=a[c.atoms[m]],m-=1;if(-1!==m){var o=e(d(k.group)-k.bonds.electrons,k.properties.charge),p=e(d(l.group)-l.bonds.electrons,l.properties.charge);if(o=f(o),p=f(p),!(0>=o||0>=p)&&-1===k.bonds.atoms.indexOf(l.id)){var q=c.all.indexOf(l.id)-c.all.indexOf(k.id),r=0;if(q>1)for(var s=c.all.slice(c.all.indexOf(k.id)+1,c.all.indexOf(l.id)),t=0;t<s.length;t++)void 0===b[s[t]]?r+=0:"ring"!==b[s[t]].name&&(r+=1);if(0===r){var u=k.name+k.id+(l.name+l.id),v=k.name+l.name,w="single",x=1;("H"===k.name||"H"===l.name)&&(w="H"),1===k.properties.aromatic&&1===l.properties.aromatic&&(w="aromatic",x=1.5),c.bonds.push(u),b[u]=i(u,w,v,x,[k.id,l.id]),g(k.id,l.id,u,x)}}}}for(var y=n["default"].H,z=function(c,d,e){var f="H"+(c+1)+e+d,g=f;a[g]=h(g,"H","H",y.group,y.protons,y.neutrons,y.electrons),b[f]=i(f,"H","H",1,[d,g]),a[d].bonds.id.push(f),a[d].bonds.atoms.push(g),a[d].bonds.electrons+=1,a[g].bonds.id.push(f),a[g].bonds.atoms.push(d),a[g].bonds.electrons+=1},j=0;j<c.atoms.length;j++){var k=a[c.atoms[j]];if(!(k.group<13&&k.group>1)){var A=k.bonds.atoms.length;if("H"!==k.name&&A>0)for(var t=0;A>t;t++){var B=k.bonds.atoms[t],l=a[B];if("H"===l.name){var C=parseInt(l.value.match(/[0-9]+/g));if(C>1&&C<k.electrons)for(var D=0;C-1>D;D++)z(D,k.id,k.name)}}else"H"===k.name&&0===k.properties.charge&&0===A&&z(j,k.id,k.name);var E=18-k.group-k.bonds.electrons,F=k.properties.charge;if(!(0>=E||1===k.group||(F>0?E-=F:0>F&&(E+=F,1===E&&(E-=1,a[k.id].bonds.electrons+=1)),0>=E)))for(var t=0;E>t;t++)1===k.properties.aromatic&&t>1||z(t,k.id,k.name)}}return[a,b,c]}function o(a,b){for(var c=Object.keys(a),d=Object.keys(b),e=0;e<d.length;e++){var f=a[b[d[e]].atoms[0]],g=a[b[d[e]].atoms[1]],h=b[d[e]].order;b[d[e]].value=f.name+h+g.name}for(var i=function(a,b){return a+(b+1)},j=function(a,b,c){a.hasOwnProperty(b)&&(a[c]=a[b],delete a[b])},e=0;e<c.length;e++){var k=c[e],l=i(a[k].name,e);a[k].id=l;for(var m=0;m<a[k].bonds.id.length;m++){var n=a[k].bonds.id[m],o=b[n].atoms.indexOf(k);-1!==o&&(b[n].atoms[o]=l),n=a[k].bonds.atoms[m],o=a[n].bonds.atoms.indexOf(k),-1!==o&&(a[n].bonds.atoms[o]=l)}j(a,k,l)}return[a,b]}var p=void 0,q=void 0,r=void 0,s=void 0;if(a=b(a),!a)return!1;var t=c(a),u=l(t,4);p=u[0],q=u[1],r=u[2],s=u[3],p=d(p,s),p=e(p,r,s);var v=f(p,q,s),w=l(v,3);p=w[0],q=w[1],s=w[2];var x=m(p,q,s),y=l(x,3);p=y[0],q=y[1],s=y[2];var z=o(p,q),A=l(z,2);return p=A[0],q=A[1],{atoms:p,bonds:q}}function g(a,b){for(var c=arguments.length<=2||void 0===arguments[2]?[]:arguments[2],d=0;d<a.length;d++)c[d]=b.indexOf(a[d])>-1?1:0;return c}function h(a,b,c){var d=arguments.length<=3||void 0===arguments[3]?0:arguments[3],e=arguments.length<=4||void 0===arguments[4]?0:arguments[4],f=arguments.length<=5||void 0===arguments[5]?0:arguments[5],g=arguments.length<=6||void 0===arguments[6]?0:arguments[6];return{id:a,name:b,value:c,group:d,protons:e,neutrons:f,electrons:g,bonds:{id:[],atoms:[],electrons:0},properties:{chiral:0,charge:0,aromatic:0}}}function i(a,b,c){var d=arguments.length<=3||void 0===arguments[3]?0:arguments[3],e=arguments.length<=4||void 0===arguments[4]?[]:arguments[4];return{id:a,name:b,value:c,order:d,atoms:e}}function j(a,b,c){var d=b.indexOf(a);if(-1!==d){b=b.slice(d,b.length);for(var e=1,f=b.length;f>e;e++)if(void 0!==c[b[e]])return b[e]}return null}function k(a,b,c){if("0"===a&&void 0!==c[0])return"0";var d=b.indexOf(a);if(-1!==d){b=b.slice(0,d).reverse();for(var e=0,f=b.length;f>e;e++)if(void 0!==c[b[e]])return b[e]}return null}Object.defineProperty(c,"__esModule",{value:!0});var l=function(){function a(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!b||c.length!==b);d=!0);}catch(i){e=!0,f=i}finally{try{!d&&h["return"]&&h["return"]()}finally{if(e)throw f}}return c}return function(b,c){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return a(b,c);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),m=a("./../utilities/reference"),n=d(m),o=[{type:"atom",term:"H",tag:"H",expression:/(?=[A-Z])H(?=[^efgos]|$)([0-9]?)+/g},{type:"atom",term:"D",tag:"H",expression:/(?=[A-Z])D(?=[^bsy]|$)([0-9]?)+/g},{type:"atom",term:"He",tag:"He",expression:/He/g},{type:"atom",term:"Li",tag:"Li",expression:/Li/g},{type:"atom",term:"Be",tag:"Be",expression:/Be/g},{type:"atom",term:"B",tag:"B",expression:/B(?=[^aehikr]|$)/g},{type:"atom",term:"C",tag:"C",expression:/C(?=[^adeflmnorsu]|$)/g},{type:"atom",term:"N",tag:"N",expression:/N(?=[^abdeiop]|$)/g},{type:"atom",term:"O",tag:"O",expression:/O(?=[^s]|$)/g},{type:"atom",term:"F",tag:"F",expression:/F(?=[^elmr]|$)/g},{type:"atom",term:"Ne",tag:"Ne",expression:/Ne/g},{type:"atom",term:"Na",tag:"Na",expression:/Na/g},{type:"atom",term:"Mg",tag:"Mg",expression:/Mg/g},{type:"atom",term:"Al",tag:"Al",expression:/Al/g},{type:"atom",term:"Si",tag:"Si",expression:/Si/g},{type:"atom",term:"P",tag:"P",expression:/P(?=[^abdmortu]|$)/g},{type:"atom",term:"S",tag:"S",expression:/S(?=[^bcegimnr]|$)/g},{type:"atom",term:"Cl",tag:"Cl",expression:/Cl/g},{type:"atom",term:"Ar",tag:"Ar",expression:/Ar/g},{type:"atom",term:"As",tag:"As",expression:/As/g},{type:"atom",term:"Se",tag:"Se",expression:/Se/g},{type:"atom",term:"Br",tag:"Br",expression:/Br/g},{type:"atom",term:"I",tag:"I",expression:/I(?=[^nr]|$)/g},{type:"atom",term:"b",tag:"B",expression:/b(?=[^e]|$)/g},{type:"atom",term:"c",tag:"C",expression:/c(?=[^l]|$)/g},{type:"atom",term:"n",tag:"N",expression:/n(?=[^ae]|$)/g},{type:"atom",term:"o",tag:"O",expression:/o(?=[^s]|$)/g},{type:"atom",term:"p",tag:"P",expression:/p/g},{type:"atom",term:"s",tag:"S",expression:/s(?=[^ei]|$)/g},{type:"atom",term:"se",tag:"Se",expression:/se/g},{type:"bond",term:"-",tag:"single",expression:/(?=([^0-9]))[-](?=[^0-9-\]])/g},{type:"bond",term:"=",tag:"double",expression:/[=]/g},{type:"bond",term:"#",tag:"triple",expression:/[#]/g},{type:"bond",term:"(",tag:"branch",expression:/[(]/g},{type:"bond",term:")",tag:"branch",expression:/[)]/g},{type:"bond",term:"%",tag:"ring",expression:/(?=[^+-])(?:[a-zA-Z]{1,2}[@]{1,2})?(?:[a-zA-Z]|[a-zA-Z]*.?[\]])[%]?\d+(?=([^+]|$))/g},{type:"bond",term:".",tag:"dot",expression:/(?:[A-Z][+-]?[\[])?[.]/g},{type:"property",term:"+",tag:"charge",expression:/[a-zA-Z]{1,2}[0-9]*[+]+[0-9]*(?=[\]])/g},{type:"property",term:"-",tag:"charge",expression:/[a-zA-Z]{1,2}[0-9]*[-]+[0-9]*(?=[\]])/g},{type:"property",term:"n",tag:"isotope",expression:/(?:[\[])[0-9]+[A-Z]{1,2}(?=.?[^\[]*[\]])/g},{type:"property",term:"S",tag:"chiral",expression:/[A-Z][a-z]?[@](?![A-Z]{2}[0-9]+|[@])/g},{type:"property",term:"R",tag:"chiral",expression:/[A-Z][a-z]?[@]{2}(?![A-Z]{2}[0-9]+)/g}];c.grammar=o,c.tokenize=e,c.decode=f},{"./../utilities/reference":5}],2:[function(a,b,c){"use strict";function d(a){return a&&a.__esModule?a:{"default":a}}function e(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}Object.defineProperty(c,"__esModule",{value:!0});var f=a("./../utilities/math"),g=d(f),h={matrix:{adjacency:function(a){for(var b=Object.keys(a.atoms).filter(function(b){return"H"!==a.atoms[b].name}),c=Object.keys(a.bonds).filter(function(b){return"H"!==a.bonds[b].name}),d=[],e=0;e<b.length;e++){d[e]=[];for(var f=0;f<b.length;f++)d[e][f]=0}for(var e=0;e<c.length;e++){var g=b.indexOf(a.bonds[c[e]].atoms[0]),h=b.indexOf(a.bonds[c[e]].atoms[1]);d[g][h]=1,d[h][g]=1}return d},degree:function(a){for(var b=[],c=0;c<a.length;c++){b[c]=[];for(var d=0;d<a[c].length;d++)if(b[c][d]=0,c===d)for(var e=0;e<a[c].length;e++)b[c][d]+=a[c][e]}return b},distance:function(a){for(var b=[],c=[],d=g["default"].matrix.multiply(a,a),e=0;e<a.length;e++){b[e]=[];for(var f=0;f<a[e].length;f++)b[e][f]=e!==f&&(1===a[e][f]||d[e][f]>0)?1:0}for(var h=0,e=0;e<b.length;e++)for(var f=0;f<b[0].length;f++)e!==f&&1===b[e][f]&&(h+=1);if(h===b.length*b.length-b.length){for(var e=0;e<b.length;e++){c[e]=[];for(var f=0;f<b[e].length;f++)c[e][f]=2*b[e][f]-a[e][f]}return c}for(var i=this.distance(b),j=g["default"].matrix.multiply(i,a),k=[],e=0;e<a.length;e++){k[e]=0;for(var f=0;f<a[0].length;f++)k[e]+=a[e][f]}for(var e=0;e<j.length;e++){c[e]=[];for(var f=0;f<j[0].length;f++)j[e][f]>=i[e][f]*k[f]?c[e][f]=2*i[e][f]:j[e][f]<i[e][f]*k[f]&&(c[e][f]=2*i[e][f]-1)}return c},laplacian:function(a,b){for(var c=[],d=0;d<a.length;d++){c[d]=[];for(var e=0;e<a[d].length;e++)c[d][e]=b[d][e]-a[d][e]}return c},randic:function(a,b){for(var c=[],d=0;d<a.length;d++){c[d]=[];for(var f=0;f<a[d].length;f++)c[d][f]=0,1===a[d][f]&&(c[d][f]=1/Math.sqrt(Math.max.apply(Math,e(b[d]))*Math.max.apply(Math,e(b[f]))))}return c},reciprocal:function(a){for(var b=[],c=0;c<a.length;c++){b[c]=[];for(var d=0;d<a[c].length;d++)b[c][d]=0,c!==d&&a[c][d]>0&&(b[c][d]=1/a[c][d])}return b}},index:{balaban:function(a){for(var b=0,c=0,d=[],e=0;e<a.length;e++)d[e]=a[e].reduce(function(a,b){return a+b},0);for(var e=0;e<a.length-1;e++)for(var f=e+1;f<a[e].length;f++)1===a[e][f]&&(b+=1/Math.sqrt(d[e]*d[f]),c+=1);return c/(c-a.length+2)*b},harary:function(a){for(var b=0,c=0;c<a.length;c++)for(var d=0;d<a[c].length;d++)b+=a[c][d];return b/2},hyperwiener:function(a){for(var b=0,c=0;c<a.length;c++)for(var d=0;c>d;d++)b+=a[c][d]+Math.pow(a[c][d],2);return b/2},randic:function(a){for(var b=0,c=0;c<a.length;c++)b+=a[c].reduce(function(a,b){return a+b},0);return b/2},wiener:function(a){for(var b=0,c=0;c<a.length;c++)for(var d=0;d<a[c].length;d++)b+=a[c][d];return b/2}}};c["default"]=h,b.exports=c["default"]},{"./../utilities/math":4}],3:[function(a,b,c){"use strict";function d(a){return a&&a.__esModule?a:{"default":a}}function e(){var a=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],b=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],c=arguments.length<=2||void 0===arguments[2]?0:arguments[2],d=h(a),e=f(a),i=g(e);return{id:c,name:i,atoms:a,bonds:b,properties:{mass:d,formula:e}}}function f(a){var b=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];if("object"!=typeof a)return null;for(var c=Object.keys(a),d=0;d<c.length;d++)void 0===b[a[c[d]].name]?b[a[c[d]].name]=1:b[a[c[d]].name]+=1;return b}function g(a){var b=arguments.length<=1||void 0===arguments[1]?[]:arguments[1];if("object"!=typeof a)return null;var c=Object.keys(a).sort(),d=function(a){return c.splice(c.indexOf(a),1)},e=function(c){b.push(1===a[c]?c:c+a[c])};if(-1!==c.indexOf("C")&&(e("C"),d("C")),-1!==c.indexOf("H")&&(e("H"),d("H")),c.length>0)for(var f=0;f<c.length;f++)e(c[f]);return b.join("")}function h(a){var b=arguments.length<=1||void 0===arguments[1]?0:arguments[1];if("object"!=typeof a)return null;for(var c=Object.keys(a),d=0;d<c.length;d++)b+=a[c[d]].protons+a[c[d]].neutrons;return Math.round(1e4*b)/1e4}function i(a){if("object"!=typeof a)return null;for(var b=Object.keys(a.atoms),c=Object.keys(a.bonds),d=[],e=[],f=0;f<b.length;f++)d.push({id:a.atoms[b[f]].id,name:a.atoms[b[f]].name,group:a.atoms[b[f]].group,protons:a.atoms[b[f]].protons,neutrons:a.atoms[b[f]].neutrons,electrons:a.atoms[b[f]].electrons,bonds:a.atoms[b[f]].bonds,properties:a.atoms[b[f]].properties});for(var f=0;f<c.length;f++)e.push({id:a.bonds[c[f]].id,name:a.bonds[c[f]].name,value:a.bonds[c[f]].value,source:a.bonds[c[f]].atoms[0],target:a.bonds[c[f]].atoms[1],order:a.bonds[c[f]].order});return{nodes:d,links:e}}Object.defineProperty(c,"__esModule",{value:!0});var j=a("./main/smiles"),k=a("./main/topology"),l=d(k),m={smiles:function(a){var b=j.tokenize(a),c=b.tokens,d=j.decode(c),f=d.atoms,g=d.bonds;return e(f,g)},json:function(a){return JSON.parse(a)}},n={json:function(a){return JSON.stringify(a,null,"	")},d3:function(a){return i(a)}},o={matrix:{adjacency:function(a){return l["default"].matrix.adjacency(a)},degree:function(a){return l["default"].matrix.degree(a)},distance:function(a){return l["default"].matrix.distance(a)},laplacian:function(a,b){return l["default"].matrix.laplacian(a,b)},randic:function(a,b){return l["default"].matrix.randic(a,b)},reciprocal:function(a){return l["default"].matrix.reciprocal(a)}},index:{balaban:function(a){return l["default"].index.balaban(a)},harary:function(a){return l["default"].index.harary(a)},hyperwiener:function(a){return l["default"].index.hyperwiener(a)},randic:function(a){return l["default"].index.randic(a)},wiener:function(a){return l["default"].index.wiener(a)}}};c.load=m,c.save=n,c.topology=o},{"./main/smiles":1,"./main/topology":2}],4:[function(a,b,c){"use strict";Object.defineProperty(c,"__esModule",{value:!0});var d={matrix:{zeros:function(){var a=arguments.length<=0||void 0===arguments[0]?1:arguments[0],b=arguments.length<=1||void 0===arguments[1]?a:arguments[1],c=arguments.length<=2||void 0===arguments[2]?[]:arguments[2];return function(){for(var d=0;a>d;d++){c[d]=[];for(var e=0;b>e;e++)c[d][e]=0}return c}()},ones:function(){var a=arguments.length<=0||void 0===arguments[0]?1:arguments[0],b=arguments.length<=1||void 0===arguments[1]?a:arguments[1],c=arguments.length<=2||void 0===arguments[2]?[]:arguments[2];return function(){for(var d=0;a>d;d++){c[d]=[];for(var e=0;b>e;e++)c[d][e]=1}return c}()},add:function(a,b){for(var c=arguments.length<=2||void 0===arguments[2]?[]:arguments[2],d=0;d<a.length;d++){c[d]=[];for(var e=0;e<a[d].length;e++)c[d][e]=a[d][e]+b[d][e]}return c},subtract:function(a,b){for(var c=arguments.length<=2||void 0===arguments[2]?[]:arguments[2],d=0;d<a.length;d++){c[d]=[];for(var e=0;e<a[d].length;e++)c[d][e]=a[d][e]-b[d][e]}return c},multiply:function(a,b){var c=arguments.length<=2||void 0===arguments[2]?[]:arguments[2];switch(typeof b){case"object":for(var d=0;d<a.length;d++){c[d]=[];for(var e=0;e<a[0].length;e++){c[d][e]=0;for(var f=0;f<a[0].length;f++)c[d][e]+=a[d][f]*b[f][e]}}return c;case"number":for(var g=0;g<a.length;g++){c[g]=[];for(var e=0;e<a[0].length;e++)c[g][e]=a[g][e]*b}return c}},identity:function(a){for(var b=arguments.length<=1||void 0===arguments[1]?[]:arguments[1],c=0;c<a.length;c++){b[c]=[];for(var d=0;d<a[c].length;d++)b[c][d]=0,c===d&&(b[c][d]=1)}return b},inverse:function(a){var b=arguments.length<=1||void 0===arguments[1]?[]:arguments[1],c=arguments.length<=2||void 0===arguments[2]?[]:arguments[2];if(a.length!==a[i].length)return null;for(var d=0;d<a.length;d++){b[d]=[],c[d]=[];for(var e=0;e<a[d].length;e++)b[d][e]=a[d][e],c[d][e]=0,d===e&&(c[d][e]=1)}for(var f=0,g=a[i][i];f<a.length;f++){if(0===g){for(var e=f+1;e<a.length;e++)if(0!==a[e][f]){for(var h=0;h<a.length;h++)g=b[f][h],b[f][h]=b[e][h],b[e][h]=g,g=c[f][e],c[f][h]=c[e][h],c[e][h]=g;break}if(g=b[f][f],0===b[f][f])return null}for(var e=0,j=b[f][f];e<a.length;e++)b[f][e]=b[f][e]/j,c[f][e]=c[f][e]/j;for(var e=0;e<a.length;e++)if(f!==e)for(var h=0,k=b[e][f];h<a.length;h++)b[e][h]-=b[f][h]*k,c[e][h]-=c[f][h]*k}return c},check:function(a){var b=arguments.length<=1||void 0===arguments[1]?[]:arguments[1];if(!Array.isArray(a))throw"Error: input 'A' must be an array";if(!Array.isArray(b))throw"Error: input 'B' must be an array";if(0===a.length)throw"Error: input cannot be empty";if(0!==b.length&&a.length!==b.length)throw"Error: matrix dimensions must agree";if(a.filter(function(a){return Array.isArray(a)}).length===a.length){if(a.map(function(a){return a.length}).reduce(function(a,b){return a+b})!==a.length*a.length)throw"Error: matrix dimensions must agree";if(0!==b.length){if(b.filter(function(a){return Array.isArray(a)}).length!==a.length)throw"Error: matrix dimensions must agree";if(b.map(function(a){return a.length}).reduce(function(a,b){return a+b})!==a.length*a.length)throw"Error: matrix dimensions must agree"}}else{if(a.filter(function(a){return"number"==typeof a}).length!==a.length)throw"Error: input must be uniform";if(0!==b.length&&b.filter(function(a){return"number"==typeof a}).length!==a.length)throw"Error: matrix dimensions must agree"}return 1}}};c["default"]=d,b.exports=c["default"]},{}],5:[function(a,b,c){"use strict";Object.defineProperty(c,"__esModule",{value:!0});var d={elements:{H:{protons:1,neutrons:.0079,electrons:1,group:1,period:1},D:{protons:1,neutrons:1,electrons:1,group:1,period:1},He:{protons:2,neutrons:2.0026,electrons:2,group:18,period:1},Li:{protons:3,neutrons:3.941,electrons:3,group:1,period:2},Be:{protons:4,neutrons:5.0122,electrons:4,group:2,period:2},B:{protons:5,neutrons:5.811,electrons:5,group:13,period:2},C:{protons:6,neutrons:6.0107,electrons:6,group:14,period:2},N:{protons:7,neutrons:7.0067,electrons:7,group:15,period:2},O:{protons:8,neutrons:7.9994,electrons:8,group:16,period:2},F:{protons:9,neutrons:9.9984,electrons:9,group:17,period:2},Ne:{protons:10,neutrons:10.1797,electrons:10,group:18,period:2},Na:{protons:11,neutrons:11.9897,electrons:11,group:1,period:3},Mg:{protons:12,neutrons:12.305,electrons:12,group:2,period:3},Al:{protons:13,neutrons:13.9815,electrons:13,group:13,period:3},Si:{protons:14,neutrons:14.0855,electrons:14,group:14,period:3},P:{protons:15,neutrons:15.9738,electrons:15,group:15,period:3},S:{protons:16,neutrons:16.065,electrons:16,group:16,period:3},Cl:{protons:17,neutrons:18.45,electrons:17,group:17,period:3},Ar:{protons:18,neutrons:21.948,electrons:18,group:18,period:3},K:{protons:19,neutrons:20.0983,electrons:19,group:1,period:4},Ca:{protons:20,neutrons:20.078,electrons:20,group:2,period:4},Sc:{protons:21,neutrons:23.9559,electrons:21,group:3,period:4},Ti:{protons:22,neutrons:25.867,electrons:22,group:4,period:4},V:{protons:23,neutrons:27.9415,electrons:23,group:5,period:4},Cr:{protons:24,neutrons:27.9961,electrons:24,group:6,period:4},Mn:{protons:25,neutrons:29.938,electrons:25,group:7,period:4},Fe:{protons:26,neutrons:29.845,electrons:26,group:8,period:4},Co:{protons:27,neutrons:31.9332,electrons:27,group:9,period:4},Ni:{protons:28,neutrons:30.6934,electrons:28,group:10,period:4},Cu:{protons:29,neutrons:34.546,electrons:29,group:11,period:4},Zn:{protons:30,neutrons:35.39,electrons:30,group:12,period:4},Ga:{protons:31,neutrons:38.723,electrons:31,group:13,period:4},Ge:{protons:32,neutrons:40.61,electrons:32,group:14,period:4},As:{protons:33,neutrons:41.9216,electrons:33,group:15,period:4},Se:{protons:34,neutrons:44.96,electrons:34,group:16,period:4},Br:{protons:35,neutrons:44.904,electrons:35,group:17,period:4},Kr:{protons:36,neutrons:47.8,electrons:36,group:18,period:4},Rb:{protons:37,neutrons:48.4678,electrons:37,group:1,period:5},Sr:{protons:38,neutrons:49.621,electrons:38,group:2,period:5},Y:{protons:39,neutrons:49.9058,electrons:39,group:3,period:5},Zr:{protons:40,neutrons:52.2242,electrons:40,group:4,period:5},Nb:{protons:41,neutrons:51.9064,electrons:41,group:5,period:5},Mo:{protons:42,neutrons:53.951,electrons:42,group:6,period:5},Tc:{protons:43,neutrons:55,electrons:43,group:7,period:5},Ru:{protons:44,neutrons:57.072,electrons:44,group:8,period:5},Rh:{protons:45,neutrons:57.9055,electrons:45,group:9,period:5},Pd:{protons:46,neutrons:60.421,electrons:46,group:10,period:5},Ag:{protons:47,neutrons:60.8682,electrons:47,group:11,period:5},Cd:{protons:48,neutrons:64.4144,electrons:48,group:12,period:5},In:{protons:49,neutrons:65.8181,electrons:49,group:13,period:5},Sn:{protons:50,neutrons:68.7107,electrons:50,group:14,period:5},Sb:{protons:51,neutrons:70.7601,electrons:51,group:15,period:5},Te:{protons:52,neutrons:75.603,electrons:52,group:16,period:5},I:{protons:53,neutrons:73.9045,electrons:53,group:17,period:5},Xe:{protons:54,neutrons:77.2936,electrons:54,group:18,period:5}}};c["default"]=d.elements,b.exports=c["default"]},{}]},{},[3])(3)});