!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.Molecules=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";function d(a){return a&&a.__esModule?a:{"default":a}}function e(a,b){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a)){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!b||c.length!==b);d=!0);}catch(i){e=!0,f=i}finally{try{!d&&h["return"]&&h["return"]()}finally{if(e)throw f}}return c}throw new TypeError("Invalid attempt to destructure non-iterable instance")}function f(a){for(var b=void 0===arguments[1]?[]:arguments[1],c=0;c<o.length;c++)for(var d=o[c],e=[];e=d.expression.exec(a);)b.push({index:e.index,type:d.type,term:e[0],tag:d.tag});b.sort(function(a,b){return a.index<b.index?-1:a.index>b.index?1:0});for(var c=0;c<b.length;c++){var f=b[c],g=(f.term,f.tag);if("ring"===g){var h=b[c].term.match(/[0-9]+/g);if(null===h)continue;if(h=h[0],h.length>1){for(var i=0,j=0;j<b.length;j++)if(c!==j&&"ring"===b[j].tag){var k=b[j].term.match(/[0-9]+/g);if(null!==k&&(k=k[0],h===k)){i=1;break}}if(1===i)continue;for(var l=b[c].term.match(/[a-zA-Z]/g)[0],m=b[c].index,n=b[c].type,p=b[c].tag,j=0;j<h.length;j++)b.splice(c+1,0,{index:m+j,type:n,term:l+h.substr(j,j+1),tag:p});b.splice(c,1)}}}return{tokens:b}}function g(a){function b(a){if("object"!=typeof a)return console.log('Error: Tokens must be of type "object"'),!1;void 0!==a.tokens&&(a=a.tokens);for(var b=["index","type","term","tag"],c=0;c<a.length;c++){var d=h(b,Object.keys(a[c]));if(d.reduce(function(a,b){return a+b})<4)return console.log('Error: Invalid token at index "'+c+'"'),!1}return a}function c(a){for(var b=void 0===arguments[1]?{}:arguments[1],c=void 0===arguments[2]?{}:arguments[2],d=void 0===arguments[3]?{}:arguments[3],e=void 0===arguments[4]?{}:arguments[4],f=function(a){return a.toString()},g=0;g<a.length;g++){var h=a[g],k=h.type,l=h.term,m=h.tag,n=h.index,o=f(n);switch(k){case"atom":b[o]=i(o,m,l);break;case"bond":c[o]=j(o,m,l);break;case"property":d[o]={id:o,name:m,value:l}}}if(b.length<1)return console.log("Error: Could not find atoms"),!1;e.all=[];for(var g=0;g<a.length;g++)e.all[g]=f(a[g].index);return e.atoms=Object.keys(b),e.bonds=Object.keys(c),e.properties=Object.keys(d),[b,c,d,e]}function d(a,b){for(var c=0;c<b.atoms.length;c++){var d=b.atoms[c];if(void 0!==n["default"][a[d].name]){var e=n["default"][a[d].name];"D"===a[d].value&&(e=n["default"][a[d].value]),a[d].group=e.group,a[d].protons=e.protons,a[d].neutrons=e.neutrons,a[d].electrons=e.electrons,a[d].bonds={id:[],atoms:[],electrons:0},a[d].properties={chiral:0,charge:0,aromatic:0},a[d].value===a[d].value.toLowerCase()&&(a[d].properties.aromatic=1)}}return a}function f(a,b,c){for(var d=0;d<c.properties.length;d++){var e=c.properties[d],f=b[e],g=f.name,h=f.value;switch(g){case"chiral":if(void 0!==a[e]){a[e].properties.chiral=h.slice(h.indexOf("@"));break}break;case"isotope":var i=h.match(/[0-9]+/g),j=1+i.toString().length+parseInt(e);if(i>0&&250>i&&void 0!==a[j]&&(i-=a[j].protons,i>0)){a[j].neutrons=i;break}break;case"charge":var k=-1!==h.indexOf("+")?1:-1,l=h.match(/(?:[^H])[0-9]+/g);if(null!==l&&void 0!==a[e]){l=l[0].substr(1),a[e].properties.charge=l*k;break}if(l=h.match(/([+]+|[-]+)/g),null!==l&&void 0!==a[e]){a[e].properties.charge=l[0].length*k;break}}}return a}function g(a,b,c){if(0===c.bonds.length||void 0===c.bonds.length)return[a,b,c];for(var d=0;d<c.bonds.length;d++){var e=c.bonds[d],f=a[l(e,c.all,a)],g=a[k(e,c.all,a)],h=c.all.indexOf(e),i=0,j=0;void 0!==f&&null!==f&&(i=c.all.indexOf(f.id)),void 0!==g&&null!==g&&(j=c.all.indexOf(g.id));var m=0;if(j>h&&h>i&&void 0!==b[c.all[h-1]]){var n=b[c.all[h-1]].value,o=b[e].value;")"!==n&&"("!==n||"-"!==o&&"="!==o&&"#"!==o&&"."!==o||(m=1)}switch(b[e].name){case"single":if(1===m)continue;b[e].order=1,b[e].atoms=[f.id,g.id];break;case"double":if(1===m)continue;b[e].order=2,b[e].atoms=[f.id,g.id];break;case"triple":if(1===m)continue;b[e].order=3,b[e].atoms=[f.id,g.id];break;case"dot":if(1===m)continue;b[e].order=0;break;case"branch":var p=c.all.slice(0,h).reverse(),q=c.all.slice(h+1,c.all.length);switch(b[e].value){case"(":for(var r=0,s=0;r<p.length;r++){if(f=a[p[r]],void 0!==f&&"H"!==f.name&&0===s){var t=1;1===f.properties.aromatic&&1===g.properties.aromatic&&(t=1.5),b[e].order=t,b[e].atoms=[f.id,g.id];break}if(void 0!==b[p[r]])switch(b[p[r]].value){case")":s++;break;case"(":s--}}for(var r=0,t=b[e].order,s=0;r<q.length;r++){if(void 0!==b[q[r]]&&0===s)switch(b[q[r]].value){case"-":t=1;break;case"=":t=2;break;case"#":t=3;break;case".":t=0}if(0===s){b[e].order=t;break}if(void 0!==b[q[r]])switch(b[q[r]].value){case")":s--;break;case"(":s++}}break;case")":for(var r=0,s=1;r<p.length;r++){if(f=a[p[r]],void 0!==f&&"H"!==f.name&&0===s){var t=1;1===f.properties.aromatic&&(t=1.5),b[e].order=t,b[e].atoms[0]=f.id;break}if(void 0!==b[p[r]])switch(b[p[r]].value){case")":s++;break;case"(":s--}}for(var r=0,t=b[e].order,s=0;r<q.length;r++){if(g=a[q[r]],void 0!==b[q[r]]&&0===s)switch(b[q[r]].value){case"-":t=1;break;case"=":t=2;break;case"#":t=3;break;case".":t=0}if(void 0!==g&&0===s){1===g.properties.aromatic&&(t=1.5),b[e].order=t,b[e].atoms[1]=g.id;break}if(void 0!==b[q[r]])switch(b[q[r]].value){case")":s--;break;case"(":s++}}}break;case"ring":for(var u=b[e].value.match(/[0-9]+/g),v=c.bonds.slice(0,c.bonds.indexOf(e)),w=c.bonds.slice(c.bonds.indexOf(e),c.bonds.length),r=1;r<w.length;r++)if("ring"===b[w[r]].name){var x=b[w[r]].value.match(/[0-9]+/g),y=w[r],z=e;if(null!==u&&null!==x&&u[0]===x[0]){for(;void 0===a[z]&&z>=-1;)z-=1;for(;void 0===a[y]&&y>=-1;)y-=1;if(-1===z||-1===y)break;var t=1;1===a[z].properties.aromatic&&1===a[y].properties.aromatic&&(t=1.5),b[e].order=t,b[e].atoms=[z.toString(),y.toString()];break}if(r===w.length-1)for(var A=0;A<v.length;A++)if("ring"===b[w[r]].name){var B=b[v[A]].value.match(/[0-9]+/g),C=e,D=v[A];if(null!==u&&null!==B&&u[0]===B[0]){for(;void 0===a[D]&&D>=-1;)D-=1;for(;void 0===a[C]&&C>=-1;)C-=1;if(-1===D||-1===C)break;var t=1;1===a[D].properties.aromatic&&1===a[C].properties.aromatic&&(t=1.5),b[e].order=t,b[e].atoms=[D.toString(),C.toString()];break}}}}}for(var d=0;d<c.bonds.length;d++)if(void 0!==c.bonds[d])if(2===b[c.bonds[d]].atoms.length){if(d!==c.bonds.length-1)for(var E=c.bonds.slice(d,c.bonds.length),r=0;r<E.length;r++)if(0!==r){var e=E[r],F=b[c.bonds[d]],G=b[e];if(void 0!==F&&void 0!==G&&(F.atoms[0]===G.atoms[0]&&F.atoms[1]===G.atoms[1]||F.atoms[0]===G.atoms[1]&&F.atoms[1]===G.atoms[0])){"ring"===F.name&&"ring"===G.name?(delete b[e],c.bonds.splice(c.bonds.indexOf(e),1)):"branch"!==F.name||"single"!==G.name&&"double"!==G.name&&"triple"!==G.name?"single"!==F.name&&"double"!==F.name&&"triple"!==F.name||"branch"!==G.name?(delete b[c.bonds[d]],c.bonds.splice(d,1)):(delete b[e],c.bonds.splice(c.bonds.indexOf(e),1)):(delete b[c.bonds[d]],c.bonds.splice(d,1)),d--;break}}}else delete b[c.bonds[d]],c.bonds.splice(d,1),d--;else c.bonds.splice(d,1),d--;for(var d=0;d<c.bonds.length;d++){var e=c.bonds[d],H=b[e].atoms[0],x=b[e].atoms[1];void 0!==H&&void 0!==x&&(a[H].bonds.id.push(e),a[x].bonds.id.push(e),a[H].bonds.atoms.push(x),a[x].bonds.atoms.push(H),a[H].bonds.electrons+=b[e].order,a[x].bonds.electrons+=b[e].order)}return[a,b,c]}function m(a,b,c){for(var d=0;d<c.atoms.length;d++)if(d+1!==c.atoms.length){for(var e=a[c.atoms[d]],f=a[c.atoms[d+1]],g=d;("H"===e.name||void 0===a[c.atoms[g]])&&g>-1;)e=a[c.atoms[g]],g-=1;if(-1!==g){var h=18,k=18;e.group<=2?h=2:e.group<13&&e.group>3&&(h=12),f.group<=2?k=2:f.group<13&&f.group>3&&(k=12);var l=h-e.group-e.bonds.electrons,m=k-f.group-f.bonds.electrons;if(18===h&&e.protons>10&&e.bonds.electrons>4&&0>=l&&(l+=4),18===k&&f.protons>10&&f.bonds.electrons>4&&0>=m&&(m+=4),e.properties.charge>0&&(l-=e.properties.charge),f.properties.charge>0&&(m-=f.properties.charge),!(0>=l||0>=m)&&-1===e.bonds.atoms.indexOf(f.id)){var o=c.all.indexOf(f.id)-c.all.indexOf(e.id),p=0;if(o>1)for(var q=c.all.slice(c.all.indexOf(e.id)+1,c.all.indexOf(f.id)),r=0;r<q.length;r++)void 0!==b[q[r]]&&"ring"!==b[q[r]].name&&(p=1);if(0===p){var s=e.name+e.id+(f.name+f.id),t="single",u=e.name+f.name,v=1;1===e.properties.aromatic&&1===f.properties.aromatic&&(t="aromatic",v=1.5),c.bonds.push(s),b[s]=j(s,t,u,v,[e.id,f.id]),a[e.id].bonds.id.push(s),a[f.id].bonds.id.push(s),a[e.id].bonds.atoms.push(f.id),a[f.id].bonds.atoms.push(e.id),a[e.id].bonds.electrons+=v,a[f.id].bonds.electrons+=v}}}}for(var w=n["default"].H,d=0;d<c.atoms.length;d++){var e=a[c.atoms[d]];if(!(e.group<13)){for(var x=e.bonds.atoms.length,r=0;x>r;r++){var y=e.bonds.atoms[r],f=a[y];if("H"===f.name){var z=parseInt(f.value.match(/[0-9]+/g));if(z>1&&z<e.electrons)for(var A=0;z-1>A;A++){var s="H"+(A+1)+e.name+e.id,t=e.name+"H";a[s]=i(s,"H","H",w.group,w.protons,w.neutrons,w.electrons),b[s]=j(s,"hydrogen",t,1,[e.id,s]),a[e.id].bonds.id.push(s),a[s].bonds.id.push(s),a[e.id].bonds.atoms.push(s),a[s].bonds.atoms.push(e.id),a[e.id].bonds.electrons+=1,a[s].bonds.electrons+=1}}}var l=18-e.group-e.bonds.electrons;if(!(0>=l||(e.properties.charge>0?l-=e.properties.charge:e.properties.charge<0&&(l+=e.properties.charge,1===l&&(l-=1,a[e.id].bonds.electrons+=1)),0>=l)))for(var r=0;l>r;r++)if(!(1===e.properties.aromatic&&r>1)){var s="H"+(r+1)+e.name+e.id,t=e.name+"H";a[s]=i(s,"H","H",w.group,w.protons,w.neutrons,w.electrons),b[s]=j(s,"hydrogen",t,1,[e.id,s]),a[e.id].bonds.id.push(s),a[s].bonds.id.push(s),a[e.id].bonds.atoms.push(s),a[s].bonds.atoms.push(e.id),a[e.id].bonds.electrons+=1,a[s].bonds.electrons+=1}}}return[a,b,c]}function o(a,b){for(var c=(Object.keys(a),Object.keys(b)),d=0;d<c.length;d++){var e=a[b[c[d]].atoms[0]],f=a[b[c[d]].atoms[1]],g=b[c[d]].order;b[c[d]].value=e.name+g+f.name}return[a,b]}var p=void 0,q=void 0,r=void 0,s=void 0;if(a=b(a),!a)return!1;var t=c(a),u=e(t,4);p=u[0],q=u[1],r=u[2],s=u[3],p=d(p,s),p=f(p,r,s);var v=g(p,q,s),w=e(v,3);p=w[0],q=w[1],s=w[2];var x=m(p,q,s),y=e(x,3);p=y[0],q=y[1],s=y[2];var z=o(p,q),A=e(z,2);return p=A[0],q=A[1],{atoms:p,bonds:q}}function h(a,b){for(var c=void 0===arguments[2]?[]:arguments[2],d=0;d<a.length;d++)c[d]=b.indexOf(a[d])>-1?1:0;return c}function i(a,b,c){var d=void 0===arguments[3]?0:arguments[3],e=void 0===arguments[4]?0:arguments[4],f=void 0===arguments[5]?0:arguments[5],g=void 0===arguments[6]?0:arguments[6];return{id:a,name:b,value:c,group:d,protons:e,neutrons:f,electrons:g,bonds:{id:[],atoms:[],electrons:0},properties:{chiral:0,charge:0,aromatic:0}}}function j(a,b,c){var d=void 0===arguments[3]?0:arguments[3],e=void 0===arguments[4]?[]:arguments[4];return{id:a,name:b,value:c,order:d,atoms:e}}function k(a,b,c){var d=b.indexOf(a);if(-1!==d){b=b.slice(d,b.length);for(var e=1;e<b.length;e++)if(void 0!==c[b[e]])return b[e]}return null}function l(a,b,c){if("0"===a&&void 0!==c[0])return"0";var d=b.indexOf(a);if(-1!==d){b=b.slice(0,d).reverse();for(var e=0;e<b.length;e++)if(void 0!==c[b[e]])return b[e]}return null}Object.defineProperty(c,"__esModule",{value:!0});var m=a("./../reference/elements"),n=d(m),o=[{type:"atom",term:"H",tag:"H",expression:/(?=[A-Z])H(?=[^efgos]|$)([0-9]?)+/g},{type:"atom",term:"D",tag:"H",expression:/(?=[A-Z])D(?=[^bsy]|$)([0-9]?)+/g},{type:"atom",term:"He",tag:"He",expression:/He/g},{type:"atom",term:"Li",tag:"Li",expression:/Li/g},{type:"atom",term:"Be",tag:"Be",expression:/Be/g},{type:"atom",term:"B",tag:"B",expression:/B(?=[^aehikr]|$)/g},{type:"atom",term:"C",tag:"C",expression:/C(?=[^adeflmnorsu]|$)/g},{type:"atom",term:"N",tag:"N",expression:/N(?=[^abdeiop]|$)/g},{type:"atom",term:"O",tag:"O",expression:/O(?=[^s]|$)/g},{type:"atom",term:"F",tag:"F",expression:/F(?=[^elmr]|$)/g},{type:"atom",term:"Ne",tag:"Ne",expression:/Ne/g},{type:"atom",term:"Na",tag:"Na",expression:/Na/g},{type:"atom",term:"Mg",tag:"Mg",expression:/Mg/g},{type:"atom",term:"Al",tag:"Al",expression:/Al/g},{type:"atom",term:"Si",tag:"Si",expression:/Si/g},{type:"atom",term:"P",tag:"P",expression:/P(?=[^abdmortu]|$)/g},{type:"atom",term:"S",tag:"S",expression:/S(?=[^bcegimnr]|$)/g},{type:"atom",term:"Cl",tag:"Cl",expression:/Cl/g},{type:"atom",term:"Ar",tag:"Ar",expression:/Ar/g},{type:"atom",term:"As",tag:"As",expression:/As/g},{type:"atom",term:"Se",tag:"Se",expression:/Se/g},{type:"atom",term:"Br",tag:"Br",expression:/Br/g},{type:"atom",term:"I",tag:"I",expression:/I(?=[^nr]|$)/g},{type:"atom",term:"*",tag:"*",expression:/[*]/g},{type:"atom",term:"b",tag:"B",expression:/b(?=[^e]|$)/g},{type:"atom",term:"c",tag:"C",expression:/c(?=[^l]|$)/g},{type:"atom",term:"n",tag:"N",expression:/n(?=[^ae]|$)/g},{type:"atom",term:"o",tag:"O",expression:/o(?=[^s]|$)/g},{type:"atom",term:"p",tag:"P",expression:/p/g},{type:"atom",term:"s",tag:"S",expression:/s(?=[^ei]|$)/g},{type:"atom",term:"se",tag:"Se",expression:/se/g},{type:"bond",term:"-",tag:"single",expression:/(?=([^0-9]))[-](?=[^0-9-\]])/g},{type:"bond",term:"=",tag:"double",expression:/[=]/g},{type:"bond",term:"#",tag:"triple",expression:/[#]/g},{type:"bond",term:"(",tag:"branch",expression:/[(]/g},{type:"bond",term:")",tag:"branch",expression:/[)]/g},{type:"bond",term:"%",tag:"ring",expression:/(?=[^+-])(?:[a-zA-Z]{1,2}[@]{1,2})?(?:[a-zA-Z]|[a-zA-Z]*.?[\]])[%]?\d+(?=([^+]|$))/g},{type:"bond",term:".",tag:"dot",expression:/(?:[A-Z][+-]?[\[])?[.]/g},{type:"property",term:"+",tag:"charge",expression:/[a-zA-Z]{1,2}[0-9]*[+]+[0-9]*(?=[\]])/g},{type:"property",term:"-",tag:"charge",expression:/[a-zA-Z]{1,2}[0-9]*[-]+[0-9]*(?=[\]])/g},{type:"property",term:"n",tag:"isotope",expression:/(?:[\[])[0-9]+[A-Z]{1,2}(?=.?[^\[]*[\]])/g},{type:"property",term:"@",tag:"chiral",expression:/[A-Z][a-z]?[@](?![A-Z]{2}[0-9]+|[@])/g},{type:"property",term:"@@",tag:"chiral",expression:/[A-Z][a-z]?[@]{2}(?![A-Z]{2}[0-9]+)/g}];c.tokenize=f,c.decode=g,c.grammar=o},{"./../reference/elements":4}],2:[function(a,b,c){"use strict";function d(a){var b=void 0===arguments[1]?[]:arguments[1],c=void 0===arguments[2]?[]:arguments[2];if("object"!=typeof a||void 0===a.atoms)return null;for(var d=Object.keys(a.atoms),e=0;e<d.length;e++)"H"!==a.atoms[d[e]].name&&b.push(a.atoms[d[e]].id);c=j(b.length);for(var e=0;e<b.length;e++)for(var f=a.atoms[b[e]],g=0;g<f.bonds.atoms.length;g++){var h=a.atoms[f.bonds.atoms[g]],i=b.indexOf(h.id);"H"!==h.name&&i>0&&(c[e][i]=1,c[i][e]=1)}return{header:b,adjacency:c}}function e(a){function b(a){for(var c=void 0===arguments[1]?[]:arguments[1],d=void 0===arguments[2]?[]:arguments[2],e=k(a,a),f=0;f<a.length;f++){c[f]=[];for(var g=0;g<a[0].length;g++)f!==g&&(1===a[f][g]||e[f][g]>0)?c[f][g]=1:c[f][g]=0}for(var h=0,f=0;f<c.length;f++)for(var g=0;g<c[0].length;g++)f!==g&&1===c[f][g]&&(h+=1);if(h===c.length*c.length-c.length)return l(k(c,2),a);for(var i=b(c),j=k(i,a),m=[],f=0;f<a.length;f++)m[f]=a[f].reduce(function(a,b){return a+b});for(var f=0;f<j.length;f++){d[f]=[];for(var g=0;g<j[0].length;g++)j[f][g]>=i[f][g]*m[g]?d[f][g]=2*i[f][g]:j[f][g]<i[f][g]*m[g]&&(d[f][g]=2*i[f][g]-1)}return d}var c=void 0===arguments[1]?[]:arguments[1],e=void 0===arguments[2]?[]:arguments[2];if("object"!=typeof a)return console.log('Error: Tokens must be of type "object"'),null;void 0!==a.atoms&&void 0!==a.bonds&&(a=d(a)),void 0!==a.header&&(c=a.header,a=a.adjacency);for(var f=0;f<a.length;f++)if(a[f].length!==a.length)return console.log("Error: Adjacency matrix must be symmetric"),null;return 0!==a.length&&(e=b(a)),{header:c,distance:e}}function f(a){var b=void 0===arguments[1]?[]:arguments[1],c=void 0===arguments[2]?[]:arguments[2];if("object"!=typeof a)return console.log('Error: Tokens must be of type "object"'),null;void 0!==a.atoms&&void 0!==a.bonds&&(a=e(d(a))),void 0!==a.header&&(b=a.header),void 0!==a.distance&&(a=a.distance);for(var f=0;f<a.length;f++)if(a[f].length!==a.length)return console.log("Error: Distance matrix must be symmetric"),null;for(var f=0;f<a.length;f++){c[f]=[];for(var g=0;g<a[f].length;g++)if(f===g)c[f][g]=0;else{var h=1/a[f][g];c[f][g]=Math.round(1e6*h)/1e6}}return void 0===c&&(c=[]),{header:b,reciprocal:c}}function g(a){var b=void 0===arguments[1]?0:arguments[1];if("object"!=typeof a)return console.log('Error: Tokens must be of type "object"'),null;void 0!==a.atoms&&void 0!==a.bonds&&(a=e(d(a))),void 0!==a.distance&&(a=a.distance);for(var c=0;c<a.length;c++)if(a[c].length!==a.length)return console.log("Error: Distance matrix must be symmetric"),null;for(var c=0;c<a.length;c++)for(var f=0;f<a[c].length;f++)b+=a[c][f];return b/2}function h(a){var b=void 0===arguments[1]?0:arguments[1];if("object"!=typeof a)return console.log('Error: Tokens must be of type "object"'),null;void 0!==a.atoms&&void 0!==a.bonds&&(a=e(d(a))),void 0!==a.distance&&(a=a.distance);for(var c=0;c<a.length;c++)if(a[c].length!==a.length)return console.log("Error: Distance matrix must be symmetric"),null;for(var c=0;c<a.length;c++)for(var f=0;f<a[c].length;f++)c!==f&&f>c&&(b+=a[c][f]+Math.pow(a[c][f],2));return b/2}function i(a){var b=void 0===arguments[1]?0:arguments[1];if("object"!=typeof a)return console.log('Error: Tokens must be of type "object"'),null;void 0!==a.atoms&&void 0!==a.bonds&&(a=f(e(d(a)))),void 0!==a.reciprocal&&(a=a.reciprocal);for(var c=0;c<a.length;c++)if(a[c].length!==a.length)return console.log("Error: Distance matrix must be symmetric"),null;for(var c=0;c<a.length;c++)for(var g=0;g<a[c].length;g++)c!==g&&(b+=a[c][g]);return Math.round(b/2*1e3)/1e3}function j(a){var b=void 0===arguments[1]?a:arguments[1],c=void 0===arguments[2]?[]:arguments[2];return function(){if("number"!=typeof a||"number"!=typeof b)return null;for(var d=0;a>d;d++){c[d]=[];for(var e=0;b>e;e++)c[d][e]=0}return c}()}function k(a,b){var c=void 0===arguments[2]?[]:arguments[2];switch(typeof b){case"object":for(var d=0;d<a.length;d++){c[d]=[];for(var e=0;e<b[0].length;e++){c[d][e]=0;for(var f=0;f<a[0].length;f++)c[d][e]+=a[d][f]*b[f][e]}}return c;case"number":for(var d=0;d<a.length;d++){c[d]=[];for(var e=0;e<a[0].length;e++)c[d][e]=a[d][e]*b}return c}}function l(a,b){var c=void 0===arguments[2]?[]:arguments[2];switch(typeof b){case"object":for(var d=0;d<a.length;d++){c[d]=[];for(var e=0;e<a[0].length;e++)c[d][e]=a[d][e]-b[d][e]}return c;case"value":for(var d=0;d<a.length;d++){c[d]=[];for(var e=0;e<a[0].length;e++)c[d][e]=a[d][e]-b}return c}}Object.defineProperty(c,"__esModule",{value:!0}),c.adjacencyMatrix=d,c.distanceMatrix=e,c.reciprocalMatrix=f,c.wienerIndex=g,c.hyperwienerIndex=h,c.hararyIndex=i},{}],3:[function(a,b,c){"use strict";function d(a){var b=void 0===arguments[1]?"SMILES":arguments[1];switch(b.toUpperCase()){case"SMILES":if("string"==typeof a){var c=j.tokenize(a),d=c.tokens;return d}if("object"==typeof a){var e=j.decode(a),f=e.atoms,h=e.bonds;return g(f,h)}return null}}function e(a){if("object"!=typeof a)return null;var b=k.adjacencyMatrix(a),c=b.header,d=b.adjacency,e=k.distanceMatrix(d),f=e.distance,g=k.reciprocalMatrix(f),h=g.reciprocal;return{header:c,adjacency:d,distance:f,reciprocal:h}}function f(a){return"object"!=typeof a?null:{harary:k.hararyIndex(a),hyper_wiener:k.hyperwienerIndex(a),wiener:k.wienerIndex(a)}}function g(){var a=void 0===arguments[0]?{}:arguments[0],b=void 0===arguments[1]?{}:arguments[1],c=void 0===arguments[2]?0:arguments[2],d=void 0===arguments[3]?0:arguments[3];return{id:c,name:d,atoms:a,bonds:b,properties:{mass:i(a),formula:h(a)}}}function h(a){var b=void 0===arguments[1]?{}:arguments[1];if("object"!=typeof a)return null;for(var c=Object.keys(a),d=0;d<c.length;d++)void 0===b[a[c[d]].name]?b[a[c[d]].name]=1:b[a[c[d]].name]+=1;return b}function i(a){var b=void 0===arguments[1]?0:arguments[1];if("object"!=typeof a)return null;for(var c=Object.keys(a),d=0;d<c.length;d++)b+=a[c[d]].protons+a[c[d]].neutrons;return Math.round(1e4*b)/1e4}Object.defineProperty(c,"__esModule",{value:!0});var j=(a("./reference/elements"),a("./encoding/smiles")),k=a("./extensions/topology");c.parse=d,c.connectivity=e,c.topology=f},{"./encoding/smiles":1,"./extensions/topology":2,"./reference/elements":4}],4:[function(a,b,c){"use strict";Object.defineProperty(c,"__esModule",{value:!0});var d={H:{protons:1,neutrons:.0079,electrons:1,group:1,period:1},D:{protons:1,neutrons:1,electrons:1,group:1,period:1},He:{protons:2,neutrons:2.0026,electrons:2,group:18,period:1},Li:{protons:3,neutrons:3.941,electrons:3,group:1,period:2},Be:{protons:4,neutrons:5.0122,electrons:4,group:2,period:2},B:{protons:5,neutrons:5.811,electrons:5,group:13,period:2},C:{protons:6,neutrons:6.0107,electrons:6,group:14,period:2},N:{protons:7,neutrons:7.0067,electrons:7,group:15,period:2},O:{protons:8,neutrons:7.9994,electrons:8,group:16,period:2},F:{protons:9,neutrons:9.9984,electrons:9,group:17,period:2},Ne:{protons:10,neutrons:10.1797,electrons:10,group:18,period:2},Na:{protons:11,neutrons:11.9897,electrons:11,group:1,period:3},Mg:{protons:12,neutrons:12.305,electrons:12,group:2,period:3},Al:{protons:13,neutrons:13.9815,electrons:13,group:13,period:3},Si:{protons:14,neutrons:14.0855,electrons:14,group:14,period:3},P:{protons:15,neutrons:15.9738,electrons:15,group:15,period:3},S:{protons:16,neutrons:16.065,electrons:16,group:16,period:3},Cl:{protons:17,neutrons:18.453,electrons:17,group:17,period:3},Ar:{protons:18,neutrons:21.948,electrons:18,group:18,period:3},As:{protons:33,neutrons:41.9216,electrons:33,group:15,period:4},Se:{protons:34,neutrons:44.96,electrons:34,group:16,period:4},Br:{protons:35,neutrons:44.904,electrons:35,group:17,period:4},I:{protons:53,neutrons:73.9045,electrons:53,group:17,period:5}};c["default"]=d,b.exports=c["default"]},{}]},{},[3])(3)});